openapi: 3.0.0

info:
  title: Smart Timer APIs
  version: 1.0.0
  description: >
    These APIs are for reading, setting and controlling Smart Timer APP. 

servers:
  - url: http://{host}:{port}/{basePath}
    description: The generic ESPBOT device
    variables:
      host:
        default: '192.168.10.1'
      port:
        enum:
        - '80'
        default: '80'
      basePath:
        enum:
        - api
        default: api
  - url: http://192.168.1.187/api
    description: test device

paths:
  /command:
    get:
      description: Returns the list of the commands on the device.
      summary: Command list
      operationId: getCommandList
      responses:
        '200':
          description: The command list
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/commandList'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Create a new command
      summary: Create a command
      operationId: createCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/command'
      responses:
        '200':
          description: Command created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/command'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /command/{command_id}:
    get:
      description: Returns the details of the specified command
      summary: Find command
      operationId: getCommand
      parameters:
      - name: command_id
        in: path
        description: The command id
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
          maximum: 49
        style: simple
      responses:
        '200':
          description: The command details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/command'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update the details of the specified command
      summary: Update a command
      operationId: updateCommand
      parameters:
      - name: command_id
        in: path
        description: The command id
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
          maximum: 49
        style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/command'
      responses:
        '200':
          description: Command successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/command'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Delete specified command
      summary: Delete a command
      operationId: deleteCommand
      parameters:
      - name: command_id
        in: path
        description: The command id
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
          maximum: 49
        style: simple
      responses:
        '200':
          description: Command successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /cron:
    get:
      description: Returns cron settings (enabled or disabled)
      summary: Find cron status
      operationId: getCron
      responses:
        '200':
          description: the cron status (enabled/disabled)
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/cron_status'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets cron status (enabled or disabled)
      summary: Enable/Disable cron
      operationId: setCron
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cron_status'
      responses:
        '200':
          description: Successful, return current cron status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cron_status'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /debug/lastReset:
    get:
      description: Returns information about last time the device rebooted.
      summary: Find last reset info
      operationId: getLastReset
      responses:
        '200':
          description: Last reset info
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/lastReset'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /debug/hexMemDump:
    post:
      description: Returns the content of a selected RAM memory interval as hexadecimal
      summary: Find memory content (hex)
      operationId: getHexMemDump
      requestBody:
        description: The memory interval range
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/memInterval'
      responses:
        '200':
          description: The memory interval content
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/memIntervalHexContent'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /debug/memDump:
    post:
      description: Returns the content of a selected RAM memory interval as text
      summary: Find memory content (text)
      operationId: getMemDump
      requestBody:
        description: The memory interval range
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/memInterval'
      responses:
        '200':
          description: The memory interval content
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/memIntervalContent'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /debug/memInfo:
    get:
      description: Returns a summary of RAM memory usage
      summary: Find RAM memory usage
      operationId: getMemInfo
      responses:
        '200':
          description: The current RAM memory usage
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/memInfo'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /deviceName:
    get:
      description: Returns the device name
      summary: Find device name
      operationId: getDeviceName
      responses:
        '200':
          description: The current device name
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/deviceName'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets device name
      summary: Set device name
      operationId: setDeviceName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceName'
      responses:
        '200':
          description: Successful, returns current device name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceName'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /diagnostic:
    get:
      description: Returns the last diagnostic events recorded by the device
      summary: Find device diagnostic
      operationId: getDiagnosticEvents
      responses:
        '200':
          description: The last diagnostic events
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/diagnosticEvents'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Acknowledges the diagnostic events.
      summary: Acknowledge diagnostic.
      operationId: ackDiagnosticEvents
      responses:
        '200':
          description: The diagnostic events were acknowledged. 
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/success'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /diagnostic/cfg:
    get:
      description: Returns the diagnostic config (which events are reported to the LED and to the serial log).
      summary: Find current diagnostic config
      operationId: getDiagnosticCfg
      responses:
        '200':
          description: The current diagnostic config
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/diagnosticCfg'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets diagnostic config
      summary: Set diagnostic config
      operationId: setDiagnosticCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/diagnosticCfg'
      responses:
        '200':
          description: Successful, returns current diagnostic config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/diagnosticCfg'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /file:
    get:
      description: Returns a list of the files on the device.
      summary: File list
      operationId: getFileList
      responses:
        '200':
          description: The file list
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/fileList'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /file/{filename}:
    get:
      description: Returns the content of a file
      summary: Find file
      operationId: getFile
      parameters:
      - name: filename
        in: path
        description: The file name
        required: true
        schema:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        style: simple
      responses:
        '200':
          description: The file content
          content:
            'application/octet-stream':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
            'text/css':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
            'text/html':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
            'text/js':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
            'text/plain':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
            'image/jpeg':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
            'image/png':
              schema:
                type: string
                format: binary
                minLength: 0
                maxLength: 4194304
                pattern: '[\x00-\xFF]{0,4194304}'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Create a new file (to create files bigger than 2048 bytes, first create then modify, appending new content)
      summary: Create a file
      operationId: createFile
      parameters:
      - name: filename
        in: path
        description: The file name
        required: true
        schema:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        style: simple
      requestBody:
        required: true
        description: The file content
        content:
          'application/octet-stream':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/css':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/html':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/js':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/plain':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'image/jpeg':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'image/png':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
      responses:
        '201':
          description: File successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: Bad request, no filename provided or file already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Append content to the specified file
      summary: Modify a file
      operationId: appendToFile
      parameters:
      - name: filename
        in: path
        description: The file name
        required: true
        schema:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        style: simple
      requestBody:
        required: true
        description: The file content
        content:
          'application/octet-stream':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/css':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/html':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/js':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'text/plain':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'image/jpeg':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
          'image/png':
            schema:
              type: string
              format: binary
              minLength: 0
              maxLength: 2048
              pattern: '[\x00-\xFF]{0,2048}'
      responses:
        '200':
          description: File successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: Bad request, no filename provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Delete the specified file
      summary: Delete a file
      operationId: deleteFile
      parameters:
      - name: filename
        in: path
        description: The file name
        required: true
        schema:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        style: simple
      responses:
        '200':
          description: File successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '400':
          description: Bad request, no filename provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /fs:
    get:
      description: Returns SPIFFS file system information
      summary: Find SPIFFS informations
      operationId: getFs
      responses:
        '200':
          description: SPIFFS informations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fsInfo'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /fs/format:
    post:
      description: Formats the file system (will take a long time)
      summary: Format File System
      operationId: formatFs
      responses:
        '202':
          description: Command accepted, the file system is being formatted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /gpio/{gpio_id}:
    get:
      description: Returns the level (low/high) for gpio with the specified id
      summary: Find gpio level
      operationId: getGpioLevel
      parameters:
      - name: gpio_id
        in: path
        description: The gpio id
        required: true
        schema:
          type: integer
          format: int32
          description: WEMOX D1 D1-D8
          minimum: 1      
          maximum: 8      
        style: simple
      responses:
        '200':
          description: The current level for gpio "gpio_id"
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/gpioInfo'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets the specified gpio to the level in the request body (will work only on gpio configured as output)
      summary: Set gpio level
      operationId: setGpioLevel
      parameters:
      - name: gpio_id
        in: path
        description: The gpio id
        required: true
        schema:
          type: integer
          format: int32
          description: WEMOX D1 D1-D8
          minimum: 1      
          maximum: 8      
        style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gpioInfo'
      responses:
        '200':
          description: Successful, returns the current gpio level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpioInfo'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /gpio/cfg/{gpio_id}:
    get:
      description: Returns the specified gpio config (unprovisioned or input or output)
      summary: Find gpio config
      operationId: getGpioCfg
      parameters:
      - name: gpio_id
        in: path
        description: The gpio id
        required: true
        schema:
          type: integer
          format: int32
          description: WEMOX D1 D1-D8
          minimum: 1      
          maximum: 8      
        style: simple
      responses:
        '200':
          description: The gpio config
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/gpioCfg'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets the specified gpio as unprovisioned or input or output
      summary: Set gpio config
      operationId: setGpioCfg
      parameters:
      - name: gpio_id
        in: path
        description: The gpio id
        required: true
        schema:
          type: integer
          format: int32
          description: WEMOX D1 D1-D8
          minimum: 1      
          maximum: 8      
        style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gpioCfg'
      responses:
        '200':
          description: Successful, returns the current gpio config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpioCfg'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /info:
    get:
      description: Returns informations about the device (device name, chip id, fw versions)
      summary: Find device info
      operationId: getInfo
      responses:
        '200':
          description: The device information
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/deviceInfo'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /mdns:
    get:
      description: Returns mDNS status (enabled or disabled)
      summary: Find mDNS status
      operationId: getMdns
      responses:
        '200':
          description: The mDNS status (enabled/disabled)
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/mdnsStatus'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets mDNS status (enabled or disabled)
      summary: Enable/Disable mDNS
      operationId: setMdns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mdnsStatus'
      responses:
        '200':
          description: Successful, returns current mDNS status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mdnsStatus'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /ota:
    post:
      description: Start OTA (in case that version check is enabled and the device binary is up-to-date OTA won't be started)
      summary: Start OTA
      operationId: startOTA
      responses:
        '200':
          description: OTA completed or not required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /ota/cfg:
    get:
      description: Returns the config used for OTA
      summary: Find OTA config
      operationId: getOtaCfg
      responses:
        '200':
          description: The current OTA config
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/otaCfg'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets OTA config
      summary: Set OTA config
      operationId: setOtaCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otaCfg'
      responses:
        '200':
          description: Successful, return current OTA config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/otaCfg'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /ota/reboot:
    post:
      description: Reboot the device after OTA completion
      summary: Reboot after OTA
      operationId: setOtaReboot
      responses:
        '202':
          description: Successful, device is rebooting...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /reboot:
    post:
      description: Reboots the device
      summary: Reboot
      operationId: setReboot
      responses:
        '202':
          description: Successful, device is rebooting...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /relay:
    get:
      description: Returns the list of the relay on the device.
      summary: Relay list
      operationId: getRelayList
      responses:
        '200':
          description: The relay list
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/relayList'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /relay/{relay_id}:
    get:
      description: Returns the details of the specified relay
      summary: Find relay
      operationId: getRelay
      parameters:
      - name: relay_id
        in: path
        description: The relay id
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 8
        style: simple
      responses:
        '200':
          description: The relay details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relay'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update the details of the specified relay
      summary: Update a relay
      operationId: updateRelay
      parameters:
      - name: relay_id
        in: path
        description: The relay id
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 8
        style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/relay'
      responses:
        '200':
          description: Relay successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relay'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /timedate:
    get:
      description: Returns the device current time and date
      summary: Find time and date
      operationId: getTimedate
      responses:
        '200':
          description: The current time and date
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/timedateFull'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets the device timedate (will only work when SNTP is disabled)
      summary: Set timedate
      operationId: setTimedate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timedate'
      responses:
        '200':
          description: Successful message, returns the current timestamp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timedate'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /timedate/cfg:
    get:
      description: Returns the device time and date config (SNTP enabled/disabled and timezone)
      summary: Find timedate config
      operationId: getTimedateCfg
      responses:
        '200':
          description: The current timedate config
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/timedateCfg'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets timedate config (SNTP enabled/disabled and timezone)
      summary: Set timedate config
      operationId: setTimedateCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timedateCfg'
      responses:
        '200':
          description: Successful, returns current timedate config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timedateCfg'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /wifi:
    get:
      description: Get wifi inforation (working mode, AP SSID and IP address)
      summary: Get wifi info
      operationId: getWifi
      responses:
        '200':
          description: Successful message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wifiInfo'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /wifi/cfg:
    get:
      description: Returns the wifi station config (SSID and password)
      summary: Find wifi config
      operationId: getWifiCfg
      responses:
        '200':
          description: The current wifi config
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/wifiCfg'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Sets wifi station config and connects to the AP
      summary: Set wifi station config
      operationId: setWifiCfg
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wifiCfg'
      responses:
        '200':
          description: Successful, returns current wifi config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wifiCfg'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'
  /wifi/scan:
    get:
      description: Gets the AP list as seen by the device in station mode
      summary: Get AP list
      operationId: getAPlist
      responses:
        '200':
          description: The list of the APs retrieved by the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wifiScanResult'
        'default':
          description: Unexpected error
          content:
            application/json:      
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    command:
      type: object
      required:
      - id
      - enabled
      - name
      - type
      - duration
      - relay_id
      - min
      - hour
      - dom
      - month
      - dow
      properties:
        id:
          type: integer
          format: int32
          description: command id
          default: 0
          minimum: 0
          maximum: 49
        enabled:
          type: integer
          format: int32
          description: 0 -> enabled, 1 -> disabled
          default: 1
          minimum: 0
          maximum: 1
        name:
          type: string
          description: command description
          pattern: '[ -~]{0,31}'
          minLength: 0
          maxLength: 31
        type:
          type: integer
          format: int32
          description: 1 -> switch open,
                       2 -> switch close,
                       3 -> pulse open,
                       4 -> pulse close
          default: 1
          minimum: 1    
          maximum: 4
        duration:
          type: integer
          format: int32
          description: the pulse duration (ms)
          default: 60000
          minimum: 10    
          maximum: 4294967295
        relay_id:
          type: integer
          format: int32
          description: the relay_id
          default: 1
          minimum: 1    
          maximum: 8
        min:
          type: integer
          format: int32
          description: minutes (-1 equal '*')
          default: -1
          minimum: -1    
          maximum: 59
        hour:
          type: integer
          format: int32
          description: hours (-1 equal '*')
          default: -1
          minimum: -1    
          maximum: 23
        dom:
          type: integer
          format: int32
          description: day of month (0 equal '*')
          default: 0
          minimum: 0    
          maximum: 31
        month:
          type: integer
          format: int32
          description: month (0 equal '*')
          default: 0
          minimum: 0    
          maximum: 12
        dow:
          type: integer
          format: int32
          description: day of week (0 equal '*')
          default: 0
          minimum: 0  
          maximum: 7
      additionalProperties: false
    commandList:
      type: object
      required:
      - commands
      properties:
        commands:
          type: array
          maxItems: 100
          items:
            $ref: '#/components/schemas/command'
      additionalProperties: false
    cron_status:
      type: object
      required:
      - cron_enabled
      properties:
        cron_enabled:
          type: integer
          format: int32
          description: enabled=1, disabled=0
          default: 0
          minimum: 0      
          maximum: 1      
      additionalProperties: false
    deviceInfo:
      type: object
      required:
      - device_name
      - chip_id
      - app_name
      - app_version
      - espbot_version
      - library_version
      - sdk_version
      - boot_version
      properties:
        device_name:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        chip_id:
          type: string
          pattern: '[0-9]{1,10}'
          minLength: 1
          maxLength: 10
        app_name:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 64
        app_version:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 64
        espbot_version:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 64
        library_version:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 64
        sdk_version:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 64
        boot_version:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 64
      additionalProperties: false
    deviceName:
      type: object
      required:
      - device_name
      properties:
        device_name:
          type: string
          description: the device name
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
      additionalProperties: false
    diagnosticEvents:
      type: object
      required:
      - diag_events
      properties:
        diag_events:
          type: array
          maxItems: 65535
          items:
            type: object
            required:
            - ts
            - ack
            - type
            - code
            - val
            properties:
              ts:
                type: integer
                format: int32
                description: timestamp
                default: 0
                minimum: 0
                maximum: 4294967295
              ack:
                type: integer
                format: int32
                description: 0 -> the event wasn't acknowledge yet, 1 -> the event was acknowledged
                default: 0
                minimum: 0    
                maximum: 1
              type:
                type: string
                description: the event type (hex format) (FATAL, ERROR, WARNING, INFO, DEBUG, TRACE, ALL) 
                pattern: '(0x|0X)?[0-9a-zA-Z]{1,4}'
                minLength: 1
                maxLength: 4
              code:
                type: string
                description: the event numerical code (hex format)
                pattern: '(0x|0X)?[0-9a-zA-Z]{1,6}'
                minLength: 1
                maxLength: 6
              val:
                type: integer
                format: int32
                description: an additional numerical value, depending on the event code
                default: 0
                minimum: 0    
                maximum: 4294967295
            additionalProperties: false
      additionalProperties: false
    diagnosticCfg:
      type: object
      required:
      - diag_led_mask
      - serial_log_mask
      - uart_0_bitrate
      - sdk_print_enabled
      properties:
        diag_led_mask:
          type: integer
          format: int32
          description: bitmask 0??? ????
                       .        ||| ||||_ 1 -> show FATAL events on led
                       .        ||| |||__ 1 -> show ERROR events on led
                       .        ||| ||___ 1 -> show WARNING events on led
                       .        ||| |____ 1 -> show INFO events on led
                       .        |||______ 1 -> show DEBUG events on led
                       .        ||_______ 1 -> show TRACE events on led
                       .        |________ 1 -> show ALL events on led
          default: 3
          minimum: 0
          maximum: 127
        serial_log_mask:
          type: integer
          format: int32
          description: bitmask 0??? ????
                       .        ||| ||||_ 1 -> show FATAL events on serial log
                       .        ||| |||__ 1 -> show ERROR events on serial log
                       .        ||| ||___ 1 -> show WARNING events on serial log
                       .        ||| |____ 1 -> show INFO events on serial log
                       .        |||______ 1 -> show DEBUG events on serial log
                       .        ||_______ 1 -> show TRACE events on serial log
                       .        |________ 1 -> show ALL events on serial log
          default: 0
          minimum: 0
          maximum: 127
        uart_0_bitrate:
          type: integer
          format: int32
          description: The UART 0 bitrate
          default: 74880
          minimum: 300
          maximum: 3686400
        sdk_print_enabled:
          type: integer
          format: int32
          description: If printing to UART 0 is enabled (1) or not (0)
          default: 1
          minimum: 0
          maximum: 1
      additionalProperties: false
    error:
      type: object
      required:
      - error
      properties:
        error:
          type: object
          required:
          - code
          - message
          - reason
          properties:
            code:
              type: integer
              format: int32
              default: 500
              minimum: 400      
              maximum: 511    
              description: http error code
            message:
              type: string
              description: the standard http error message
              pattern: '[ -~]{1,128}'
              minLength: 0
              maxLength: 128
            reason:
              type: string
              description: a short message describing what went wrong
              pattern: '.{0,128}'
              minLength: 0
              maxLength: 128
          additionalProperties: false
      additionalProperties: false
    fsInfo:
      type: object
      required:
      - file_system_size
      - file_system_used_size
      properties:
        file_system_size:
          type: integer
          format: int32
          description: the file system size (bytes)
          default: 1897811
          minimum: 0    
          maximum: 4194304
        file_system_used_size:
          type: integer
          format: int32
          description: the amount (bytes) of file system that is being used
          default: 0
          minimum: 0    
          maximum: 4194304
      additionalProperties: false
    fileList:
      type: object
      required:
      - files
      properties:
        files:
          type: array
          maxItems: 65535
          items:
            type: object
            required:
            - name
            - size
            properties:
              name:
                type: string
                pattern: '[ -~]{1,31}'
                minLength: 1
                maxLength: 31
              size:
                type: integer
                format: int32
                default: 0
                minimum: 0    
                maximum: 4194304
            additionalProperties: false
      additionalProperties: false
    gpioCfg:
      type: object
      required:
      - gpio_type
      properties:
        gpio_id:
          type: integer
          format: int32
          description: WEMOX D1 D1-D8
          default: 1
          minimum: 1      
          maximum: 8      
        gpio_type:
          type: string
          pattern: 'unprovisioned|input|output'
          minLength: 5
          maxLength: 13
      additionalProperties: false
    gpioInfo:
      type: object
      required:
      - gpio_level
      properties:
        gpio_id:
          type: integer
          format: int32
          description: WEMOX D1 D1-D8
          default: 1
          minimum: 1      
          maximum: 8      
        gpio_level:
          type: string
          pattern: 'unprovisioned|high|low'
          minLength: 3
          maxLength: 13
      additionalProperties: false
    lastReset:
      type: object
      required:
      - date
      - reason
      - exccause
      - epc1
      - epc2
      - epc3
      - evcvaddr
      - depc
      properties:
        date:
          type: string
          description: the timestamp when last reboot occurred
          pattern: "[A-Za-z]{3} [A-Za-z]{3} [0-9]{1,2} [0-9]{2}:[0-9]{2}:[0-9]{2} [0-9]{4}"
          minLength: 23
          maxLength: 24
        reason:
          type: integer
          description: the reason for last reboot
          format: int32
          default: 6
          minimum: 0    
          maximum: 6
        exccause:
          type: integer
          description: t
          format: int32
          default: 0
          minimum: 0    
          maximum: 0
        epc1:
          type: integer
          format: int32
          default: 0
          minimum: 0    
          maximum: 4194304
        epc2:
          type: integer
          format: int32
          default: 0
          minimum: 0    
          maximum: 0
        epc3:
          type: integer
          format: int32
          default: 0
          minimum: 0    
          maximum: 0
        evcvaddr:
          type: integer
          format: int32
          default: 0
          minimum: 0    
          maximum: 0
        depc:
          type: integer
          format: int32
          default: 0
          minimum: 0    
          maximum: 0
      additionalProperties: false
    mdnsStatus:
      type: object
      required:
      - mdns_enabled
      properties:
        mdns_enabled:
          type: integer
          format: int32
          description: enabled=1, disabled=0
          default: 0
          minimum: 0      
          maximum: 1      
      additionalProperties: false
    memInterval:
      type: object
      required:
      - address
      - length
      properties:
        address:
          type: string
          description: the memory interval starting address
          pattern: '(0x|0X)?[0-9a-fA-F]{8}'
          minLength: 8
          maxLength: 10
        length:
          type: integer
          format: int32
          description: the memory interval length
          default: 4
          minimum: 4    
          maximum: 1024
      additionalProperties: false
    memIntervalContent:
      type: object
      required:
      - address
      - length
      - content
      properties:
        address:
          type: string
          description: the memory interval starting address
          pattern: '(0x|0X)?[0-9a-fA-F]{8}'
          minLength: 8
          maxLength: 10
        length:
          type: integer
          format: int32
          description: the memory interval length
          default: 4
          minimum: 4    
          maximum: 1024
        content:
          type: string
          description: the memory interval content (example 'string')
          pattern: '[\x00-\x7F]{4,1024}'
          minLength: 0
          maxLength: 1024
      additionalProperties: false
    memIntervalHexContent:
      type: object
      required:
      - address
      - length
      - content
      properties:
        address:
          type: string
          description: the memory interval starting address
          pattern: '(0x|0X)?[0-9a-fA-F]{8}'
          minLength: 8
          maxLength: 10
        length:
          type: integer
          format: int32
          description: the memory interval length
          default: 4
          minimum: 4    
          maximum: 1024
        content:
          type: string
          description: the memory interval content (example ' 0 A0 33 3F')
          pattern: '( [0-9a-fA-F][0-9a-fA-F])+'
          minLength: 0
          maxLength: 1024
      additionalProperties: false
    memInfo:
      type: object
      required:
      - stack_max_addr
      - stack_min_addr
      - heap_start_addr
      - heap_free_size
      - heap_max_size
      - heap_min_size
      - heap_objs
      - heap_max_objs
      properties:
        stack_max_addr:
          type: string
          description: the highest (estimated) memory address reached by the stack
          pattern: '(0x|0X)?[0-9a-fA-F]{8,10}'
          minLength: 8
          maxLength: 10
        stack_min_addr:
          type: string
          description: the lowest (estimated) memory address reached by the stack
          pattern: '(0x|0X)?[0-9a-fA-F]{8,10}'
          minLength: 8
          maxLength: 10
        heap_start_addr:
          type: string
          description: the starting heap memory address (SDK excluded)
          pattern: '(0x|0X)?[0-9a-fA-F]{8,10}'
          minLength: 8
          maxLength: 10
        heap_free_size:
          type: integer
          format: int32
          description: the size of currently free heap memory
          default: 42000
          minimum: 0
          maximum: 65536
        heap_max_size:
          type: integer
          format: int32
          description: the maximum size of free heap memory
          default: 42000
          minimum: 0
          maximum: 65536
        heap_min_size:
          type: integer
          format: int32
          description: the minimum size of free heap memory
          default: 42000
          minimum: 0
          maximum: 65536
        heap_objs:
          type: integer
          format: int32
          description: the amount of objects currently allocated to the heap memory
          default: 26
          minimum: 0
          maximum: 65536
        heap_max_objs:
          type: integer
          format: int32
          description: the maximum number of objects allocated to the heap memory
          default: 30
          minimum: 0
          maximum: 65536
      additionalProperties: false
    otaCfg:
      type: object
      required:
      - host
      - port
      - path
      - check_version
      - reboot_on_completion
      properties:
        host:
          type: string
          pattern: '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'
          minLength: 7
          maxLength: 15
        port:
          type: integer
          format: int32
          default: 80
          minimum: 1
          maximum: 65535
        path:
          type: string
          pattern: '/[ -~]{0,4095}'
          minLength: 1
          maxLength: 4096
        check_version:
          type: integer
          format: int32
          description: 0 -> don't check the binary version, 1- check the binary version
          default: 0
          minimum: 0
          maximum: 1
        reboot_on_completion:
          type: integer
          format: int32
          description: 0 -> don't reboot on completion, 1 -> reboot on completion
          default: 1
          minimum: 0
          maximum: 1
      additionalProperties: false
    relay:
      type: object
      required:
      - pin
      - reserved
      - name
      - logic
      - status_at_boot
      properties:
        pin:
          type: integer
          format: int32
          description: gpio pin
          default: 1
          minimum: 1
          maximum: 8
        reserved:
          type: integer
          format: int32
          description: 0 -> the relay is available for use, 1 -> the relay is reserved
          default: 0
          minimum: 0    
          maximum: 1
        name:
          type: string
          description: a description of relay use 
          pattern: '[ -~]{0,31}'
          minLength: 0
          maxLength: 31
        logic:
          type: integer
          format: int32
          description: the relay logic. 0 -> logic_undefined, 1-> pin_low_relay_closed, 2 -> pin_high_relay_closed
          default: 1
          minimum: 0    
          maximum: 2
        status_at_boot:
          type: integer
          format: int32
          description: an relay status at boot. 0 -> status_undefined, 1-> open, 2 -> closed
          default: 0
          minimum: 0    
          maximum: 2
      additionalProperties: false
    relayList:
      type: object
      required:
      - relays
      properties:
        relays:
          type: array
          maxItems: 8
          items:
            $ref: '#/components/schemas/relay'
      additionalProperties: false
    success:
      type: object
      required:
      - msg
      properties:
        msg:
          type: string
          description: a short message describing what was accomplished
          pattern: '.{0,128}'
          minLength: 0
          maxLength: 128
      additionalProperties: false
    timedate:
      type: object
      required:
      - timestamp
      properties:
        timestamp:
          type: integer
          format: int32
          description: timestamp
          default: 0
          minimum: 0
          maximum: 4294967295
      additionalProperties: false
    timedateFull:
      type: object
      required:
      - timestamp
      - date
      - sntp_enabled
      - timezone
      properties:
        timestamp:
          type: integer
          format: int32
          description: timestamp
          default: 0
          minimum: 0
          maximum: 4294967295
        date:
          type: string
          description: the timestamp when last reboot occurred
          pattern: '[A-Za-z]{3} [A-Za-z]{3} [0-9]{1,2} [0-9]{2}:[0-9]{2}:[0-9]{2} [0-9]{4}'
          minLength: 23
          maxLength: 24
        sntp_enabled:
          type: integer
          format: int32
          description: 0 -> disabled, 1 -> enabled
          default: 0
          minimum: 0
          maximum: 1
        timezone:
          type: integer
          format: int32
          description: timezone
          default: 0
          minimum: -14
          maximum: 14
      additionalProperties: false
    timedateCfg:
      type: object
      required:
      - sntp_enabled
      - timezone
      properties:
        sntp_enabled:
          type: integer
          format: int32
          description: 0 -> disabled, 1 -> enabled
          default: 0
          minimum: 0
          maximum: 1
        timezone:
          type: integer
          format: int32
          description: timezone
          default: 0
          minimum: -14
          maximum: 14
      additionalProperties: false
    wifiCfg:
      type: object
      required:
      - station_ssid
      - station_pwd
      properties:
        station_ssid:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        station_pwd:
          type: string
          pattern: '[ -~]{1,63}'
          minLength: 1
          maxLength: 63
      additionalProperties: false
    wifiInfo:
      type: object
      required:
      - op_mode
      - ip_address
      properties:
        op_mode:
          type: string
          pattern: 'STATION|AP'
          description: STATION or AP
          minLength: 2
          maxLength: 7
        SSID:
          type: string
          pattern: '[ -~]{1,31}'
          minLength: 1
          maxLength: 31
        ip_address:
          type: string
          pattern: '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'
          minLength: 7
          maxLength: 15
      additionalProperties: false
    wifiScanResult:
      type: object
      required:
      - AP_count
      - AP_SSIDs
      properties:
        AP_count:
          type: integer
          format: int32
          default: 0
          minimum: 0    
          maximum: 65535
        AP_SSIDs:
          type: array
          maxItems: 65535
          items:
            type: string
            pattern: '[ -~]{1,31}'
            minLength: 1
            maxLength: 31
      additionalProperties: false
